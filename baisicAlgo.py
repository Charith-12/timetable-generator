# the program currently only outputs timetables individually for each batch

class Module:
    def __init__(self, name, credits):
        self.name = name
        self.credits = credits

class Slot: 
    def __init__(self, time, modules):
        self.time = time
        self.modules= modules


#gives a list of the timeslots as hours. Only whole hours can be used not half hours or mins.
def timeslot_maker(days,beginTime,endTime):
    t = beginTime
    d = 0
    timeslots = [beginTime,]
    while d<days:
         while t <endTime:
           t += 1
           timeslots.append(t)
         d = d +1
         t = beginTime
         timeslots.append(0)
    #to see output uncomment line bellow
    #print(timeslots)
    return timeslots

#times is the list of timeslots generated by timeslot_maker, modules is the list of modules for that grade 
def moduleAssign(times,modules):
    timetable = []
    i = 0
    y = 0
    while i < len(modules):
        j = 0
        while j < modules[i].credits:       
            newSlot = Slot(times[y+j],modules[i])
            timetable.append(newSlot)
            j = j + 1
        y = y + j
        i = i + 1
    for slot in timetable:
        print(" hour ",slot.time )
        print(slot.modules.name)




modulesfor8 = [Module('sec03031',2),Module('CCS101',2),Module('EME404',2)]
modulesfor6 = [Module('EEE426',2),Module('EEE432',1)]
times = timeslot_maker(2,0,24)

  
print('timetable for 8')
print(" ")
moduleAssign(times,modulesfor8)
print(" ")
print('timetable for 6')
print(" ")
moduleAssign(times,modulesfor6)

